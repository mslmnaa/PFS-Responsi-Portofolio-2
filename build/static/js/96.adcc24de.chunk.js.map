{"version":3,"file":"static/js/96.adcc24de.chunk.js","mappings":"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","sources":["components/ProjectsSection.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { motion, useAnimation, AnimatePresence } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { FaLink, FaCodeBranch } from \"react-icons/fa\";\r\nimport { IoChevronBackCircle, IoChevronForwardCircle } from \"react-icons/io5\";\r\n\r\n// Sample projects data\r\nconst projects = [\r\n  { \r\n    id: 1, \r\n    title: \"Nurse Game\", \r\n    tech: [\"C\"], \r\n    demo: \"https://ecommerce-demo.com\", \r\n    source: \"https://github.com/username/ecommerce\", \r\n    description: \"A comprehensive e-commerce solution with advanced product filtering.\",\r\n    status: \"Completed\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 2, \r\n    title: \"Personal Portfolio\", \r\n    tech: [\"React\", \"Framer Motion\"], \r\n    demo: \"https://portfolio-demo.com\", \r\n    source: \"https://github.com/username/portfolio\", \r\n    description: \"Interactive portfolio with smooth animations.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 3, \r\n    title: \"Blog Platform\", \r\n    tech: [\"Node.js\", \"Express\"], \r\n    demo: \"https://blog-platform.com\", \r\n    source: \"https://github.com/username/blog-platform\", \r\n    description: \"Full-featured blog platform with user authentication.\",\r\n    status: \"In Progress\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 4, \r\n    title: \"Weather App\", \r\n    tech: [\"React\", \"API\"], \r\n    demo: \"https://weather-app.com\", \r\n    source: \"https://github.com/username/weather-app\", \r\n    description: \"Real-time weather application with location services.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 4, \r\n    title: \"Weather App\", \r\n    tech: [\"React\", \"API\"], \r\n    demo: \"https://weather-app.com\", \r\n    source: \"https://github.com/username/weather-app\", \r\n    description: \"Real-time weather application with location services.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 4, \r\n    title: \"Weather App\", \r\n    tech: [\"React\", \"API\"], \r\n    demo: \"https://weather-app.com\", \r\n    source: \"https://github.com/username/weather-app\", \r\n    description: \"Real-time weather application with location services.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 4, \r\n    title: \"Weather App\", \r\n    tech: [\"React\", \"API\"], \r\n    demo: \"https://weather-app.com\", \r\n    source: \"https://github.com/username/weather-app\", \r\n    description: \"Real-time weather application with location services.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  },\r\n  { \r\n    id: 4, \r\n    title: \"Weather App\", \r\n    tech: [\"React\", \"API\"], \r\n    demo: \"https://weather-app.com\", \r\n    source: \"https://github.com/username/weather-app\", \r\n    description: \"Real-time weather application with location services.\",\r\n    status: \"Live\",\r\n    image: \"/api/placeholder/400/320\"\r\n  }\r\n];\r\n\r\n// Status color mapping\r\nconst statusColors = {\r\n  \"Completed\": \"bg-green-100 text-green-800\",\r\n  \"Live\": \"bg-blue-100 text-blue-800\",\r\n  \"In Progress\": \"bg-yellow-100 text-yellow-800\"\r\n};\r\n\r\nfunction ProjectSection({ isDarkMode }) {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({\r\n    threshold: 0.2,\r\n    triggerOnce: false\r\n  });\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [direction, setDirection] = useState(0);\r\n  const [projectsPerPage, setProjectsPerPage] = useState(3);\r\n  const [totalDisplayed, setTotalDisplayed] = useState(0); // New state for total displayed projects\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      let newProjectsPerPage;\r\n      if (window.innerWidth < 640) {\r\n        newProjectsPerPage = 1;\r\n      } else if (window.innerWidth < 1024) {\r\n        newProjectsPerPage = 2;\r\n      } else {\r\n        newProjectsPerPage = 3;\r\n      }\r\n      setProjectsPerPage(newProjectsPerPage);\r\n      setTotalDisplayed(prevTotal => {\r\n        const newTotal = Math.floor(prevTotal / newProjectsPerPage) * newProjectsPerPage;\r\n        setCurrentPage(Math.floor(newTotal / newProjectsPerPage));\r\n        return newTotal;\r\n      });\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        delayChildren: 0.3,\r\n        staggerChildren: 0.1\r\n      }\r\n    }\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.5,\r\n        type: \"spring\",\r\n        bounce: 0.4\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredProjects = projects.filter((project) => {\r\n    const matchesSearch = project.title.toLowerCase().includes(search.toLowerCase());\r\n    const matchesFilter = filter ? project.tech.includes(filter) : true;\r\n    return matchesSearch && matchesFilter;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredProjects.length / projectsPerPage);\r\n\r\n  const handlePrevPage = () => {\r\n    setDirection(-1);\r\n    setTotalDisplayed(prev => Math.max(0, prev - projectsPerPage));\r\n    setCurrentPage(prev => Math.max(0, prev - 1));\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setDirection(1);\r\n    setTotalDisplayed(prev => Math.min(filteredProjects.length, prev + projectsPerPage));\r\n    setCurrentPage(prev => Math.min(totalPages - 1, prev + 1));\r\n  };\r\n\r\n  const currentProjects = filteredProjects.slice(\r\n    totalDisplayed,\r\n    totalDisplayed + projectsPerPage\r\n  );\r\n\r\n  const handleDotClick = (index) => {\r\n    const newTotalDisplayed = index * projectsPerPage;\r\n    setDirection(newTotalDisplayed > totalDisplayed ? 1 : -1);\r\n    setTotalDisplayed(newTotalDisplayed);\r\n    setCurrentPage(index);\r\n  };\r\n\r\n  return (\r\n    <motion.section \r\n      ref={ref}\r\n      className={`\r\n        min-h-screen w-full flex flex-col justify-start items-center \r\n        py-8 px-4 sm:px-6 lg:px-8 relative overflow-hidden\r\n        ${isDarkMode \r\n          ? \"bg-gradient-to-br from-gray-900 to-gray-800 text-white\" \r\n          : \"bg-gradient-to-br from-gray-50 to-gray-100 text-gray-900\"}\r\n      `}\r\n    >\r\n      <motion.div \r\n        className=\"container mx-auto h-full flex flex-col max-w-7xl px-4 sm:px-6 lg:px-8\"\r\n        initial=\"hidden\"\r\n        animate={controls}\r\n        variants={containerVariants}\r\n      >\r\n        <motion.h2 \r\n          className=\"text-4xl font-bold mb-6 text-center\"\r\n          variants={itemVariants}\r\n        >\r\n          My <span className=\"text-blue-500\">Projects</span>\r\n        </motion.h2>\r\n\r\n        <motion.div \r\n          className=\"flex flex-col sm:flex-row gap-4 mb-6 justify-center w-full\"\r\n          variants={itemVariants}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search projects...\"\r\n            className={`\r\n              p-2 border rounded-lg w-full sm:w-64 \r\n              ${isDarkMode \r\n                ? \"bg-gray-700 text-white border-gray-600 placeholder-gray-400\" \r\n                : \"bg-white text-gray-900 border-gray-300 placeholder-gray-500\"}\r\n            `}\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <select\r\n            className={`\r\n              p-2 border rounded-lg w-full sm:w-64 \r\n              ${isDarkMode \r\n                ? \"bg-gray-700 text-white border-gray-600\" \r\n                : \"bg-white text-gray-900 border-gray-300\"}\r\n            `}\r\n            value={filter}\r\n            onChange={(e) => setFilter(e.target.value)}\r\n          >\r\n            <option value=\"\">All Technologies</option>\r\n            {[...new Set(projects.flatMap(p => p.tech))].map(tech => (\r\n              <option key={tech} value={tech}>{tech}</option>\r\n            ))}\r\n          </select>\r\n        </motion.div>\r\n\r\n        <div className=\"flex-grow relative\">\r\n          {/* Navigation buttons - Adjusted to be half outside the card */}\r\n          <div className=\"absolute top-1/2 -left-4 -right-4 flex justify-between z-10 transform -translate-y-1/2\">\r\n            <motion.button\r\n              className={`\r\n                w-12 h-12 rounded-full flex items-center justify-center \r\n                transition-all duration-300\r\n                ${isDarkMode \r\n                  ? 'bg-white/10 hover:bg-white/20 text-white/70 hover:text-white' \r\n                  : 'bg-black/10 hover:bg-black/20 text-gray-700 hover:text-gray-900'}\r\n                shadow-md cursor-pointer\r\n                transform -translate-x-1/2\r\n              `}\r\n              onClick={handlePrevPage}\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <IoChevronBackCircle className=\"w-8 h-8\" />\r\n            </motion.button>\r\n            \r\n            <motion.button\r\n              className={`\r\n                w-12 h-12 rounded-full flex items-center justify-center \r\n                transition-all duration-300\r\n                ${isDarkMode \r\n                  ? 'bg-white/10 hover:bg-white/20 text-white/70 hover:text-white' \r\n                  : 'bg-black/10 hover:bg-black/20 text-gray-700 hover:text-gray-900'}\r\n                shadow-md cursor-pointer\r\n                transform translate-x-1/2\r\n              `}\r\n              onClick={handleNextPage}\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <IoChevronForwardCircle className=\"w-8 h-8\" />\r\n            </motion.button>\r\n          </div>\r\n\r\n          <AnimatePresence custom={direction} mode=\"wait\">\r\n            <motion.div \r\n              key={currentPage}\r\n              custom={direction}\r\n              variants={{\r\n                enter: (direction) => ({\r\n                  x: direction > 0 ? 1000 : -1000,\r\n                  opacity: 0\r\n                }),\r\n                center: {\r\n                  x: 0,\r\n                  opacity: 1\r\n                },\r\n                exit: (direction) => ({\r\n                  x: direction < 0 ? 1000 : -1000,\r\n                  opacity: 0\r\n                })\r\n              }}\r\n              initial=\"enter\"\r\n              animate=\"center\"\r\n              exit=\"exit\"\r\n              transition={{\r\n                x: { type: \"spring\", stiffness: 300, damping: 30 },\r\n                opacity: { duration: 0.2 }\r\n              }}\r\n              className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\"\r\n            >\r\n              {currentProjects.map((project) => (\r\n                <motion.div\r\n                  key={project.id}\r\n                  variants={itemVariants}\r\n                  className={`\r\n                    rounded-xl shadow-lg overflow-hidden\r\n                    ${isDarkMode \r\n                      ? \"bg-gray-800 border border-gray-700\" \r\n                      : \"bg-white border border-gray-200\"}\r\n                  `}\r\n                >\r\n                  <div \r\n                    className=\"h-32 bg-cover bg-center\"\r\n                    style={{ backgroundImage: `url(${project.image})` }}\r\n                  />\r\n                  <div className=\"p-4\">\r\n                    <div className=\"flex justify-between items-center mb-2\">\r\n                      <h3 className=\"text-lg font-semibold\">{project.title}</h3>\r\n                      <span \r\n                        className={`px-2 py-1 rounded-full text-xs font-semibold ${\r\n                          statusColors[project.status]\r\n                        }`}\r\n                      >\r\n                        {project.status}\r\n                      </span>\r\n                    </div>\r\n                    <p className={`mb-3 text-sm ${\r\n                      isDarkMode ? \"text-gray-300\" : \"text-gray-600\"\r\n                    }`}>\r\n                      {project.description}\r\n                    </p>\r\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\r\n                      {project.tech.map((tech) => (\r\n                        <span\r\n                          key={tech}\r\n                          className={`px-2 py-1 rounded text-xs ${\r\n                            isDarkMode \r\n                              ? \"bg-gray-700 text-gray-300\" \r\n                              : \"bg-gray-200 text-gray-800\"\r\n                          }`}\r\n                        >\r\n                          {tech}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                      <motion.a\r\n                        href={project.demo}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className={`\r\n                          px-3 py-1 rounded-lg flex-1 text-center flex items-center justify-center gap-1 \r\n                          ${isDarkMode \r\n                            ? \"bg-blue-600 hover:bg-blue-700\" \r\n                            : \"bg-blue-500 hover:bg-blue-600\"}\r\n                          text-white transition-all duration-300\r\n                        `}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        whileTap={{ scale: 0.95 }}\r\n                      >\r\n                        <FaLink className=\"text-xs\" />\r\n                        Demo\r\n                      </motion.a>\r\n                      <motion.a\r\n                        href={project.source}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className={`\r\n                          px-3 py-1 rounded-lg flex-1 text-center flex items-center justify-center gap-1 \r\n                          ${isDarkMode \r\n                            ? \"bg-gray-700 hover:bg-gray-600\" \r\n                            : \"bg-gray-300 hover:bg-gray-400\"}\r\n                          text-white transition-all duration-300\r\n                        `}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        whileTap={{ scale: 0.95 }}\r\n                      >\r\n                        <FaCodeBranch className=\"text-xs\" />\r\n                        Code\r\n                      </motion.a>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        {/* Pagination dots */}\r\n        <div className=\"flex justify-center gap-3 mt-8\">\r\n          {Array.from({ length: totalPages }).map((_, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className={`\r\n                h-3 rounded-full cursor-pointer\r\n                ${currentPage === index \r\n                  ? `w-8 ${isDarkMode ? 'bg-blue-400' : 'bg-blue-500'}` \r\n                  : `w-3 ${isDarkMode ? 'bg-gray-600' : 'bg-gray-300'}`\r\n                }\r\n              `}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              onClick={() => handleDotClick(index)} // Updated onClick event\r\n            />\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </motion.section>\r\n  );\r\n}\r\n\r\nexport default ProjectSection;\r\n\r\n","import { invariant } from '../../utils/errors.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["projects","id","title","tech","demo","source","description","status","image","statusColors","_ref","isDarkMode","controls","useAnimation","ref","inView","useInView","threshold","triggerOnce","search","setSearch","useState","filter","setFilter","currentPage","setCurrentPage","direction","setDirection","projectsPerPage","setProjectsPerPage","totalDisplayed","setTotalDisplayed","useEffect","handleResize","newProjectsPerPage","window","innerWidth","prevTotal","newTotal","Math","floor","addEventListener","removeEventListener","start","itemVariants","hidden","opacity","y","visible","transition","duration","type","bounce","filteredProjects","project","matchesSearch","toLowerCase","includes","matchesFilter","totalPages","ceil","length","currentProjects","slice","_jsx","motion","section","className","children","_jsxs","div","initial","animate","variants","delayChildren","staggerChildren","h2","placeholder","value","onChange","e","target","Set","flatMap","p","map","button","onClick","handlePrevPage","prev","max","whileHover","scale","whileTap","IoChevronBackCircle","handleNextPage","min","IoChevronForwardCircle","AnimatePresence","custom","mode","enter","x","center","exit","stiffness","damping","style","backgroundImage","a","href","rel","FaLink","FaCodeBranch","Array","from","_","index","newTotalDisplayed","handleDotClick","setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","subscribe","add","delete","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","isArray","setValues","stop","values","stopAnimation","mount","useConstant","useIsomorphicLayoutEffect","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","root","has","toString","get","observe","element","callback","arguments","undefined","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","entry","_a","some","trackVisibility","isVisible","createObserver","callbacks","splice","indexOf","unobserve","size","disconnect","React","delay","rootMargin","skip","initialInView","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}